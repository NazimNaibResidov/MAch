{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./Core/httpclient.service\";\nexport class AuthService {\n  constructor(router, _http) {\n    this.router = router;\n    this._http = _http;\n  }\n  login(user) {\n    return this.Core(\"User\", \"Login\", user);\n  }\n  logout() {\n    localStorage.removeItem(\"token\");\n    localStorage.clear();\n    this.isLoggedIn = false;\n    this.router.navigate(['/login']);\n    localStorage.clear();\n    this.isLoggedIn = true;\n  }\n  Registrtion(auth) {\n    let result = this.Core('User', 'Registration', auth);\n    return result;\n  }\n  Core(_controllerName, _actionName, data) {\n    return this._http.post({\n      controller: _controllerName,\n      action: _actionName\n    }, data);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClientService));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,WAAW;EAEtBC,YACUC,MAAc,EAAUC,KAAwB;IAAhD,WAAM,GAAND,MAAM;IAAkB,UAAK,GAALC,KAAK;EAAuB;EAK9DC,KAAK,CAACC,IAAgB;IAEpB,OAAO,IAAI,CAACC,IAAI,CAAC,MAAM,EAAC,OAAO,EAACD,IAAI,CAAC;EAEtC;EAEDE,MAAM;IACJC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAChCD,YAAY,CAACE,KAAK,EAAE;IACpB,IAAI,CAACC,UAAU,GAAC,KAAK;IACrB,IAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAChCJ,YAAY,CAACE,KAAK,EAAE;IACpB,IAAI,CAACC,UAAU,GAAC,IAAI;EACtB;EAEAE,WAAW,CAACC,IAAgB;IAC1B,IAAIC,MAAM,GAAG,IAAI,CAACT,IAAI,CAAC,MAAM,EAAE,cAAc,EAAEQ,IAAI,CAAC;IACpD,OAAOC,MAAM;EACf;EAEQT,IAAI,CAAIU,eAAuB,EAAGC,WAAmB,EAAEC,IAAO;IACpE,OAAO,IAAI,CAACf,KAAK,CAACgB,IAAI,CACpB;MACEC,UAAU,EAAEJ,eAAe;MAC3BK,MAAM,EAAEJ;KACT,EAAEC,IAAI,CAAC;EACZ;;AAlCWlB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAsB,SAAXtB,WAAW;EAAAuB,YAFV;AAAM","names":["AuthService","constructor","router","_http","login","user","Core","logout","localStorage","removeItem","clear","isLoggedIn","navigate","Registrtion","auth","result","_controllerName","_actionName","data","post","controller","action","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\resid\\source\\repos\\MatcT\\src\\Api\\WebApi\\WebApi.Clinet\\src\\app\\services\\auths.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { HttpClientService } from './Core/httpclient.service';\nimport { LoginModel } from '../models/componentsModul/login-model';\nimport { CreateUser } from '../models/componentsModul/create-user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  isLoggedIn: boolean;\n  constructor(\n    private router: Router, private _http: HttpClientService) { }\n  \n\n\n  \n  login(user: LoginModel) {\n   \n    return this.Core(\"User\",\"Login\",user);\n                         \n   }\n\n  logout() {\n    localStorage.removeItem(\"token\");\n    localStorage.clear();\n    this.isLoggedIn=false;\n    this.router.navigate(['/login']);\n    localStorage.clear();\n    this.isLoggedIn=true;\n  }\n  \n  Registrtion(auth: CreateUser) {\n    let result = this.Core('User', 'Registration', auth);\n    return result;\n  }\n\n  private Core<T>(_controllerName: string , _actionName: string, data: T): Observable<T> {\n    return this._http.post<T>(\n      {\n        controller: _controllerName,\n        action: _actionName\n      }, data);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}