{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let HttpClientService = /*#__PURE__*/(() => {\n  class HttpClientService {\n    constructor(httpClient, baseUrl) {\n      this.httpClient = httpClient;\n      this.baseUrl = baseUrl;\n    }\n    url(requestParameter) {\n      return `${requestParameter.baseUrl ? requestParameter.baseUrl : this.baseUrl}/${requestParameter.controller}${requestParameter.action ? `/${requestParameter.action}` : \"\"}`;\n    }\n    get(requestParameter, id) {\n      let url = \"\";\n      if (requestParameter.fullEndPoint) url = requestParameter.fullEndPoint;else url = `${this.url(requestParameter)}${id ? `/${id}` : \"\"}${requestParameter.queryString ? `?${requestParameter.queryString}` : \"\"}`;\n      return this.httpClient.get(url, {\n        headers: requestParameter.headers,\n        responseType: requestParameter.responseType\n      });\n    }\n    post(requestParameter, body) {\n      let url = \"\";\n      //debugger;\n      if (requestParameter.fullEndPoint) url = requestParameter.fullEndPoint;else url = `${this.url(requestParameter)}${requestParameter.queryString ? `?${requestParameter.queryString}` : \"\"}`;\n      return this.httpClient.post(url, body, {\n        headers: requestParameter.headers,\n        responseType: requestParameter.responseType\n      });\n    }\n    put(requestParameter, body) {\n      let url = \"\";\n      if (requestParameter.fullEndPoint) url = requestParameter.fullEndPoint;else url = `${this.url(requestParameter)}${requestParameter.queryString ? `?${requestParameter.queryString}` : \"\"}`;\n      return this.httpClient.put(url, body, {\n        headers: requestParameter.headers,\n        responseType: requestParameter.responseType\n      });\n    }\n    delete(requestParameter, id) {\n      //debugger;\n      let url = \"\";\n      if (requestParameter.fullEndPoint) url = requestParameter.fullEndPoint;else url = `${this.url(requestParameter)}?id=${id}${requestParameter.queryString ? `?${requestParameter.queryString}` : \"\"}`;\n      return this.httpClient.delete(url, {\n        headers: requestParameter.headers,\n        responseType: requestParameter.responseType\n      });\n    }\n    SetLocalItem(name = \"token\", item) {\n      localStorage.setItem(name, item);\n    }\n    GetLocalItem(name = \"token\") {\n      return localStorage.getItem(name);\n    }\n  }\n  HttpClientService.ɵfac = function HttpClientService_Factory(t) {\n    return new (t || HttpClientService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(\"baseUrl\"));\n  };\n  HttpClientService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HttpClientService,\n    factory: HttpClientService.ɵfac,\n    providedIn: 'root'\n  });\n  return HttpClientService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}