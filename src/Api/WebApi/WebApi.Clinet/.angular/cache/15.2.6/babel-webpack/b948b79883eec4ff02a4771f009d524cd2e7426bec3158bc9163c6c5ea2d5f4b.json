{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/comments.service\";\nimport * as i3 from \"@angular/router\";\nexport class CreatecommentComponent {\n  constructor(fromBuilder, _http, router) {\n    this.fromBuilder = fromBuilder;\n    this._http = _http;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.Builder();\n  }\n  Create() {\n    if (this.commentGroup.valid) {\n      let createComment = Object.assign(this.commentGroup.value);\n      this._http.createComment(createComment).subscribe(resp => {\n        this.router.navigate([\"list_commet\"]);\n      });\n    }\n  }\n  Builder() {\n    this.commentGroup = this.fromBuilder.group({\n      title: new FormControl(\"\", Validators.required || Validators.maxLength(50)),\n      content: new FormControl(\"\", Validators.required || Validators.minLength(5))\n    });\n  }\n}\nCreatecommentComponent.ɵfac = function CreatecommentComponent_Factory(t) {\n  return new (t || CreatecommentComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CommentService), i0.ɵɵdirectiveInject(i3.Router));\n};\nCreatecommentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreatecommentComponent,\n  selectors: [[\"app-createcomment\"]],\n  decls: 13,\n  vars: 1,\n  consts: [[1, \"text-center\"], [1, \"col-md-10\"], [3, \"formGroup\"], [1, \"form-group\"], [\"formControlName\", \"title\", \"type\", \"text\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", \"placeholder\", \"title\", 1, \"form-control\"], [\"formControlName\", \"content\", \"type\", \"text\", \"id\", \"exampleInputPassword1\", \"placeholder\", \"content\", 1, \"form-control\"], [\"type\", \"submit\", \"value\", \"Crete\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function CreatecommentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Create Comment\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"form\", 2)(4, \"div\", 3)(5, \"label\");\n      i0.ɵɵtext(6, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\");\n      i0.ɵɵtext(10, \"Content\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 6);\n      i0.ɵɵlistener(\"click\", function CreatecommentComponent_Template_input_click_12_listener() {\n        return ctx.Create();\n      });\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.commentGroup);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAsBA,WAAW,EAAaC,UAAU,QAAQ,gBAAgB;;;;;AAShF,OAAM,MAAOC,sBAAsB;EAEjCC,YAAoBC,WAAwB,EAAUC,KAAqB,EAAUC,MAAc;IAA/E,gBAAW,GAAXF,WAAW;IAAuB,UAAK,GAALC,KAAK;IAA0B,WAAM,GAANC,MAAM;EAAY;EACvGC,QAAQ;IACN,IAAI,CAACC,OAAO,EAAE;EAChB;EACAC,MAAM;IACJ,IAAI,IAAI,CAACC,YAAY,CAACC,KAAK,EAAE;MAC3B,IAAIC,aAAa,GAAGC,MAAM,CAACC,MAAM,CAAC,IAAI,CAACJ,YAAY,CAACK,KAAK,CAAC;MAC1D,IAAI,CAACV,KAAK,CAACO,aAAa,CAACA,aAAa,CAAC,CACpCI,SAAS,CAAEC,IAAI,IAAI;QAClB,IAAI,CAACX,MAAM,CAACY,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;MACvC,CAAC,CAAC;;EAIR;EACQV,OAAO;IACb,IAAI,CAACE,YAAY,GAAG,IAAI,CAACN,WAAW,CAACe,KAAK,CAAC;MACzCC,KAAK,EAAE,IAAIpB,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACoB,QAAQ,IAAIpB,UAAU,CAACqB,SAAS,CAAC,EAAE,CAAC,CAAC;MAC3EC,OAAO,EAAE,IAAIvB,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACoB,QAAQ,IAAIpB,UAAU,CAACuB,SAAS,CAAC,CAAC,CAAC;KAC5E,CAAC;EACJ;;AAtBWtB,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAuB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCVnCC,6BAAwB;MAAAA,8BAAc;MAAAA,iBAAK;MAC3CA,8BAAuB;MAGVA,qBAAK;MAAAA,iBAAQ;MACpBA,2BACsB;MAExBA,iBAAM;MACNA,8BAAwB;MACfA,wBAAO;MAAAA,iBAAQ;MACtBA,4BAAoH;MACtHA,iBAAM;MACNA,iCAAgF;MAAzEA;QAAA,OAASC,YAAQ;MAAA,EAAC;MAAzBD,iBAAgF;;;MAX5EA,eAA0B;MAA1BA,4CAA0B","names":["FormControl","Validators","CreatecommentComponent","constructor","fromBuilder","_http","router","ngOnInit","Builder","Create","commentGroup","valid","createComment","Object","assign","value","subscribe","resp","navigate","group","title","required","maxLength","content","minLength","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\resid\\source\\repos\\MatcT\\src\\Api\\WebApi\\WebApi.Clinet\\src\\app\\components\\comments\\createcomment\\createcomment\\createcomment.component.ts","C:\\Users\\resid\\source\\repos\\MatcT\\src\\Api\\WebApi\\WebApi.Clinet\\src\\app\\components\\comments\\createcomment\\createcomment\\createcomment.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { CommentService } from 'src/app/services/comments.service';\n\n@Component({\n  selector: 'app-createcomment',\n  templateUrl: './createcomment.component.html',\n  styleUrls: ['./createcomment.component.css']\n})\nexport class CreatecommentComponent implements OnInit {\n  commentGroup: FormGroup;\n  constructor(private fromBuilder: FormBuilder, private _http: CommentService, private router: Router) { }\n  ngOnInit(): void {\n    this.Builder();\n  }\n  Create(): void {\n    if (this.commentGroup.valid) {\n      let createComment = Object.assign(this.commentGroup.value);\n      this._http.createComment(createComment)\n        .subscribe((resp) => {\n          this.router.navigate([\"list_commet\"]);\n        });\n\n    }\n\n  }\n  private Builder() {\n    this.commentGroup = this.fromBuilder.group({\n      title: new FormControl(\"\", Validators.required || Validators.maxLength(50)),\n      content: new FormControl(\"\", Validators.required || Validators.minLength(5))\n    })\n  }\n}\n","<h1 class=\"text-center\">Create Comment</h1>\n<div class=\"col-md-10\">\n  <form [formGroup]=\"commentGroup\">\n    <div class=\"form-group\">\n      <label>Title</label>\n      <input formControlName=\"title\" type=\"text\"  class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\n        placeholder=\"title\">\n    \n    </div>\n    <div class=\"form-group\">\n      <label>Content</label>\n      <input formControlName=\"content\" type=\"text\"  class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"content\">\n    </div>\n    <input (click)=\"Create()\" type=\"submit\" class=\"btn btn-primary\" value=\"Crete\" />\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}