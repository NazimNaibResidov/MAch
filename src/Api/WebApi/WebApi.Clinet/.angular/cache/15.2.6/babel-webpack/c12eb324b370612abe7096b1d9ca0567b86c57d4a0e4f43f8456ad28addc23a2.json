{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/services/auths.service\";\nexport class LoginComponent {\n  constructor(router, formBuilder, _http) {\n    this.router = router;\n    this.formBuilder = formBuilder;\n    this._http = _http;\n  }\n  ngOnInit() {\n    this.loadForm();\n  }\n  login() {\n    if (this.loginForm.valid) {\n      localStorage.removeItem('token');\n      let converObject = Object.assign({}, this.loginForm.value);\n      this._http.login(converObject).subscribe(resp => {\n        this._http.isLoggedIn = true;\n        localStorage.setItem('token', resp.token);\n        this.router.navigate(['create_comment']);\n      });\n    }\n  }\n  //#region  ::HELPERS::\n  loadForm() {\n    return this.loginForm = this.formBuilder.group({\n      email: new FormControl(\"\", Validators.required),\n      password: new FormControl(\"\", Validators.required)\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.AuthService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 14,\n  vars: 1,\n  consts: [[1, \"text-center\"], [1, \"col-md-10\"], [3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"exampleInputEmail1\"], [\"formControlName\", \"email\", \"type\", \"email\", \"placeholder\", \"Enter email\", 1, \"form-control\"], [\"for\", \"exampleInputPassword1\"], [\"formControlName\", \"password\", \"type\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"form\", 2)(4, \"div\", 3)(5, \"label\", 4);\n      i0.ɵɵtext(6, \"Email address\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 6);\n      i0.ɵɵtext(10, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_12_listener() {\n        return ctx.login();\n      });\n      i0.ɵɵtext(13, \"login\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,WAAW,EAAEC,UAAU,QAAQ,gBAAgB;;;;;AAShF,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,MAAc,EAAUC,WAAwB,EAAUC,KAAkB;IAA5E,WAAM,GAANF,MAAM;IAAkB,gBAAW,GAAXC,WAAW;IAAuB,UAAK,GAALC,KAAK;EAAiB;EACpGC,QAAQ;IACN,IAAI,CAACC,QAAQ,EAAE;EAEjB;EACAC,KAAK;IAEH,IAAI,IAAI,CAACC,SAAS,CAACC,KAAK,EAAE;MACxBC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;MAEhC,IAAIC,YAAY,GAAeC,MAAM,CAACC,MAAM,CAAC,EAAE,EAAE,IAAI,CAACN,SAAS,CAACO,KAAK,CAAC;MACtE,IAAI,CAACX,KAAK,CAACG,KAAK,CAACK,YAAY,CAAC,CAC3BI,SAAS,CAAEC,IAAS,IAAI;QACvB,IAAI,CAACb,KAAK,CAACc,UAAU,GAAG,IAAI;QAE5BR,YAAY,CAACS,OAAO,CAAC,OAAO,EAAEF,IAAI,CAACG,KAAK,CAAC;QACzC,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC;MAE1C,CAAC,CAAC;;EAER;EACA;EACQf,QAAQ;IACd,OAAO,IAAI,CAACE,SAAS,GAAG,IAAI,CAACL,WAAW,CAACmB,KAAK,CAAC;MAC7CC,KAAK,EAAE,IAAIzB,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACyB,QAAQ,CAAC;MAC/CC,QAAQ,EAAE,IAAI3B,WAAW,CAAC,EAAE,EAAEC,UAAU,CAACyB,QAAQ;KAClD,CAAC;EACJ;;AA/BWxB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV3BC,6BAAwB;MAAAA,qBAAK;MAAAA,iBAAK;MAClCA,8BAAuB;MAGeA,6BAAa;MAAAA,iBAAQ;MACrDA,2BAA2F;MAE7FA,iBAAM;MACNA,8BAAwB;MACaA,yBAAQ;MAAAA,iBAAQ;MACnDA,4BAA8F;MAChGA,iBAAM;MAEJA,kCAAgE;MAAxDA;QAAA,OAASC,WAAO;MAAA,EAAC;MAAuCD,sBAAK;MAAAA,iBAAS;;;MAX5EA,eAAuB;MAAvBA,yCAAuB","names":["FormControl","Validators","LoginComponent","constructor","router","formBuilder","_http","ngOnInit","loadForm","login","loginForm","valid","localStorage","removeItem","converObject","Object","assign","value","subscribe","resp","isLoggedIn","setItem","token","navigate","group","email","required","password","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\resid\\source\\repos\\MatcT\\src\\Api\\WebApi\\WebApi.Clinet\\src\\app\\components\\users\\login\\login\\login.component.ts","C:\\Users\\resid\\source\\repos\\MatcT\\src\\Api\\WebApi\\WebApi.Clinet\\src\\app\\components\\users\\login\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoginModel } from 'src/app/models/componentsModul/login-model';\nimport { AuthService } from 'src/app/services/auths.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n\n  constructor(private router: Router, private formBuilder: FormBuilder, private _http: AuthService) { }\n  ngOnInit(): void {\n    this.loadForm();\n\n  }\n  login() {\n\n    if (this.loginForm.valid) {\n      localStorage.removeItem('token');\n\n      let converObject: LoginModel = Object.assign({}, this.loginForm.value);\n      this._http.login(converObject)\n        .subscribe((resp: any) => {\n          this._http.isLoggedIn = true;\n\n          localStorage.setItem('token', resp.token);\n          this.router.navigate(['create_comment']);\n\n        });\n    }\n  }\n  //#region  ::HELPERS::\n  private loadForm() {\n    return this.loginForm = this.formBuilder.group({\n      email: new FormControl(\"\", Validators.required),\n      password: new FormControl(\"\", Validators.required)\n    })\n  }\n  //#endregion\n}\n","<h1 class=\"text-center\">Login</h1>\n<div class=\"col-md-10\">\n  <form [formGroup]=\"loginForm\">\n    <div class=\"form-group\">\n      <label for=\"exampleInputEmail1\">Email address</label>\n      <input formControlName=\"email\" type=\"email\" class=\"form-control\" placeholder=\"Enter email\">\n\n    </div>\n    <div class=\"form-group\">\n      <label for=\"exampleInputPassword1\">Password</label>\n      <input formControlName=\"password\" type=\"password\" class=\"form-control\" placeholder=\"Password\">\n    </div>\n\n      <button (click)=\"login()\" type=\"submit\" class=\"btn btn-primary\">login</button>\n\n\n\n  </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}