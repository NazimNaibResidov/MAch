{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/comments.service\";\nimport * as i3 from \"@angular/router\";\nexport let CreatecommentComponent = /*#__PURE__*/(() => {\n  class CreatecommentComponent {\n    constructor(fromBuilder, _http, router) {\n      this.fromBuilder = fromBuilder;\n      this._http = _http;\n      this.router = router;\n    }\n    ngOnInit() {\n      this.Builder();\n    }\n    Create() {\n      if (this.commentGroup.valid) {\n        let createComment = Object.assign(this.commentGroup.value);\n        this._http.createComment(createComment).subscribe(resp => {\n          this.router.navigate([\"list_commet\"]);\n        });\n      }\n    }\n    Builder() {\n      this.commentGroup = this.fromBuilder.group({\n        title: new FormControl(\"\", Validators.required || Validators.maxLength(50)),\n        content: new FormControl(\"\", Validators.required || Validators.minLength(5))\n      });\n    }\n  }\n  CreatecommentComponent.ɵfac = function CreatecommentComponent_Factory(t) {\n    return new (t || CreatecommentComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CommentService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  CreatecommentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreatecommentComponent,\n    selectors: [[\"app-createcomment\"]],\n    decls: 13,\n    vars: 1,\n    consts: [[1, \"text-center\"], [1, \"col-md-10\"], [3, \"formGroup\"], [1, \"form-group\"], [\"formControlName\", \"title\", \"type\", \"text\", \"id\", \"exampleInputEmail1\", \"aria-describedby\", \"emailHelp\", \"placeholder\", \"title\", 1, \"form-control\"], [\"formControlName\", \"content\", \"type\", \"text\", \"id\", \"exampleInputPassword1\", \"placeholder\", \"content\", 1, \"form-control\"], [\"type\", \"submit\", \"value\", \"Crete\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function CreatecommentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1, \"Create Comment\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"form\", 2)(4, \"div\", 3)(5, \"label\");\n        i0.ɵɵtext(6, \"Title\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\");\n        i0.ɵɵtext(10, \"Content\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"input\", 6);\n        i0.ɵɵlistener(\"click\", function CreatecommentComponent_Template_input_click_12_listener() {\n          return ctx.Create();\n        });\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.commentGroup);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName]\n  });\n  return CreatecommentComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}